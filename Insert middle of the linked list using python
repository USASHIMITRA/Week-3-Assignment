class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class Solution:
    def insertInMiddle(self, head, x):
        new_node = Node(x)
        
        # If the list is empty
        if head is None:
            return new_node
        
        # If the list has only one node
        if head.next is None:
            head.next = new_node
            return head

        # Use slow and fast pointers to find middle
        slow = head
        fast = head

        while fast.next and fast.next.next:
            slow = slow.next
            fast = fast.next.next

        # Insert the new node after slow
        new_node.next = slow.next
        slow.next = new_node

        return head
